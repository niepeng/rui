$(function() {
	//edushi domain
	// var domain = location.href;
	// if (domain.search('edushi') > -1) {
	// 	UX.basePath = 'http://chaoshi.edushi.com/';
	// 	UX.domain = 'chaoshi.edushi.com';
	// 	$('a').each(function() {
	// 		var urlStr = $(this).attr('href');
	// 		if (urlStr) {
	// 			urlStr = urlStr.replace('uxiang.com', UX.domain);
	// 			$(this).attr('href', urlStr);
	// 		}
	// 	});
	// }
	//lazy load
	UX.util.imgLazyLoad($('body'));
	$("#searchbtn").click(function() {
		var key = $("#ms").val();
		var cityId = $("#ms").data("city");
		key = jQuery.trim(key).replace("'", "");
		if (key == "") {
			alert("请输入搜索关键词");
		} else {
			window.location = UX.basePath + "search.htm?cityId=" + cityId + "&key=" + key;
		}
	});


	//核对并填写订单信息添加返回购物车
	if($('.cart-body').length){
		$('.cart-body .order-section h3:contains(商品清单)').append('<a href="' + UX.basePath + 'cart.htm?city-id=' + UX.city.id + '">返回修改购物车</a>');
	}

	var sideMenu = $('<div id="A_SideMenu" class="page-fixedMenu"></div>');
	var feedback=$('<a class="feedback" target="_blank" href="http://www.wenjuan.com/s/mMRbi2"></a>');
	sideMenu.append(feedback);
	if (UX.service.qq) {
		var qqLink = $('<a class="qq-server" target="_blank" href="http://wpa.qq.com/msgrd?v=3&uin=' + UX.service.qq + '&site=qq&menu=yes">QQ客服</a>');
		sideMenu.append(qqLink);
	}
	sideMenu.appendTo('body').show();
	//to top btn
	$(window).bind('scroll', function() {
		
		var maxHeight = 20;
		var scrollTop = $(window).scrollTop();
		if (scrollTop > maxHeight) {
			if (!$('#A_Totop').length) {
				var toTop = $('<a id="A_Totop" class="to-top" href="javascript:void(0)">');
				toTop.bind('click', function() {
					window.scrollTo(0, 0)
				})
				sideMenu.append(toTop);

			}
			$('#A_Totop').show();
		} else {
			if ($('#A_Totop').length) {
				$('#A_Totop').hide();
			}
		}
	});
	$("#ms").keyup(function(event) {
		if (event.which == 13) {
			$("#searchbtn").click();
		}
		return false;
	});
	$('.A_Menu').hover(function() {
		$(this).addClass('menu-hover');
	}, function() {
		$(this).removeClass('menu-hover');
	});
	$('.list-sugar li').hover(function() {
		$(this).addClass('hover');
	}, function() {
		$(this).removeClass('hover');
	});
	$('.cat-panel li').bind('mouseenter', function() {
		var subCate = $(this).find('.cat-sub');
		var subCateHeight = subCate.outerHeight();
		var cateTop = $(this).position().top;
		var height = $(this).height();
		if (subCateHeight > cateTop + height) {
			subCate.css('margin-top', -cateTop);
			return
		}
		var cateHeight = $('.cat-panel').height();
		var deltaHeight = cateHeight - cateTop;
		if (subCateHeight > deltaHeight) {
			subCate.css('margin-top', -(subCateHeight - deltaHeight));
			return
		}
	});
	$('.A_Cate_V').hover(function() {
		$('.cate-box').show();
		$('.A_Cate_V').find('.text').addClass('menu-hover');
	}, function() {
		$('.cate-box').hide();
		$('.A_Cate_V').find('.text').removeClass('menu-hover');
	})
	$('.T_City').click(function() {
		$(this).addClass('location-hover');
		$(this).parent().find('.T_Citys').show();
	});
    $('.T_Citys .close').bind('click',function(e){
              $('.T_City').removeClass('location-hover');
		      $(this).parent().hide();
		      e.stopPropagation();
		});
	$('#A_Cart_Number').html(UX.cart.number());
	var updateCart = function() {
		var items = UX.cart.data || [];
		$('#A_Cart_Number').html(items.length);
		var content = $('.A_Cart').find('.menu-content');
		if (items.length == 0) {
			var empty = '<div class="empty"><span class="icon"></span>购物车中还没有商品，赶紧选购吧！</div>';
			content.html(empty);
		} else {
			var cartContent = $('<div class="cart-list"></div>');
			cartContent.append('<div class="hd">最新加入的商品</div>');
			var listContent = '';
			var totalNumber = 0;
			var totalPrice = 0;
			for (var i = 0; i < items.length; i++) {
				var item = items[i];
				var number = item.buyNum;
				var link = UX.basePath + 'item.htm?cityId=' + UX.city.id + '&id=' + item.id;
				var price = item.price;
				price = accDiv(price, 100);
				listContent += '<dd><a class="image" href="' + link + '"><img width="49" src="' + item.imgs + '"></a><a class="name">' + item.name + '</a><span class="operate"><span class="red">¥ ' + price + '</span> x ' + number + '<a data-id="' + item.id + '" class="A_Cart_Del" href="javascript:void(0)">删除</a></span></dd>';
				totalNumber += parseInt(number);
				totalPrice = accAdd(totalPrice, accMul(price, number));
			}
			listContent = '<dl>' + listContent + '</dl>';
			cartContent.append(listContent);
			cartContent.append('<div class="ft"><p>共<span class="red">' + totalNumber + '</span>件商品，共计￥<span class="red price">' + totalPrice + '</span></p><a id="T_SettleSubmit" class="icon cart-btn" target="_blank" href="' + UX.basePath + 'cart.htm?city-id=' + UX.city.id + '"></a></div>');
			content.html(cartContent);
		}
	}
	// $('#T_SettleSubmit').live('click', function() {
	// 	var form = $('#SettleForm')[0];
	// 	var params = UX.cart.params();
	// 	form.itemIds.value = params.ids;
	// 	form.nums.value = params.nums;
	// 	form.submit();
	// 	return false;
	// })
	$('.A_Cart').bind('mouseenter', function(e) {
		if (UX.cart.onDel) {
			return
		}
		$(this).addClass('menu-hover');
		var cartItems = UX.cart.get();
		var content = $('.A_Cart').find('.menu-content');
		if (cartItems.length == 0) {
			updateCart()
		} else {
			var url = UX.basePath + 'json/itemInfo/items.htm';
			var itemIDs = [],
				nums = [];
			for (var i = 0; i < cartItems.length; i++) {
				var item = cartItems[i];
				itemIDs.push(item.id);
				nums.push(item.number);
			}
			$.ajax({
				type: 'GET',
				url: url,
				data: {
					cityId: UX.city.id,
					itemIds: itemIDs.join(','),
					nums: nums.join(',')
				},
				success: function(json) {
					UX.cart.data = json.data;
					updateCart();
				}
			});
		}
	}).bind('mouseleave', function() {
		UX.cart.onDel = false;
		var content = $('.A_Cart').find('.menu-content');
		content.html('<div class="loading"></div>')
		$(this).removeClass('menu-hover');
	})
	// 购物车删除
	$('.A_Cart_Del').live('click', function(event) {
		UX.cart.onDel = true;
		var id = $(this).attr('data-id');
		$(this).parents('dd').remove();
		UX.cart.remove(id, function() {
			updateCart();
		});
		return false;
	});
	// 城市切换替换cityId
	$('.T_Citys').find('a').bind('click', function() {
		var id = $(this).attr('data-id');
		var newURL = changecity(id);
		$(this).attr('href', newURL);
	});
	//登录注册的连接修改
	var urlsource = getURLParamByName('source') || location.href;
	urlsource = encodeURIComponent(urlsource);
	$(".L_Login").attr("href", UX.basePath + "login.htm?cityId=" + UX.city.id + "&referurl=" + urlsource);
	//是否开通短信注册
	if($(".L_Regsiter")){
		var isOpenPhone = UX.config.isOpenPhoneMsg;
		if(isOpenPhone && isOpenPhone=="true"){
			$(".L_Regsiter").attr("href", UX.basePath + "mobileRegister.htm?cityId=" + UX.city.id + "&referurl=" + urlsource);
		}else{
			$(".L_Regsiter").attr("href", UX.basePath + "register.htm?cityId=" + UX.city.id + "&referurl=" + urlsource);
		}
	}
	
	//购物车加减操作
	$('.scalar-sugar .plus').live('click', function() {
		var text = $(this).parent().find('.text');
		var number = parseInt(text.val());
		var newNumber = number + 1;
		text.val(newNumber);
		if ($(this).parent().find('.minus-disable').length == 1) {
			$(this).parent().find('.minus-disable').addClass('minus').removeClass('minus-disable');
		}
	});
	$('.scalar-sugar .minus').live('click', function() {
		var text = $(this).parent().find('.text');
		var number = parseInt(text.val());
		number--;
		text.val(number);
		if (number <= 1) {
			$(this).addClass('minus-disable').removeClass('minus');
		}
	});
	$(".scalar-sugar .text").live("keyup",
		function(e) {
			var count = Number($(this).val());
			if (!/^\d*$/.test(count)) {
				$(this).val("1");
			} else {
				if (count > 999) {
					$(this).val("999");
				} else if (count < 1) {
					$(this).val("1");
				}
			}
		});
	//加入购物车
	$('.A_Cart_Add').live('click', function() {
		var number = 1;
		var timer;
		var x;

		if ($(this).parent().find('input[type=text]').length == 1) {
			number = $(this).parent().find('input[type=text]').val();
		}
		var id = $(this).attr('data-id');
		if (!id || id == "") {
			return
		}

		var status = UX.cart.add(id, number);
		if (status == 1) {
			/*var popup = new UX.popup({
				relater: $(this),
				center: false,
				className: 'C_Pop_Alert',
				size: {
					width: 100,
					height: 20
				},
				offset: {
					x: -25,
					y: -50
				},
				x: false
			});
			popup.setContent('加入购物车成功！');
			popup.show();
			setTimeout(function() {
				popup.hide();
			}, 1000);*/
	        if( $(this).attr('class').match('cart-left')){
                   x=0;
	        }else if( $(this).attr('class').match('cart-right') ){
	        	   x=$(this).width()-252;
	        }else{
	        	   x=-74;
	        }
	        $('.dialog-inner').remove();
	        new DelAlert({
    	       x:x,
    	       y:$(this).height()+6,
    	       relater:$(this),
    	       title:'提醒',
    	       content:'加入购物车成功。',
    	       btnFirst:'进入购物车',
    	       btnSecond:'继续购物'
            });
			$('#A_Cart_Number').html(UX.cart.number());
            $('.btn-ok').bind('click',function(){
                $(this).parents('.dialog-inner').remove();
			    $(this).attr('href',UX.basePath + 'cart.htm?city-id=' + UX.city.id );
		    });
		    
		    $('.dialog-inner').bind('mouseenter',function(){
                clearTimeout(timer);
		    }).bind('mouseleave',function(){
				timer=setTimeout(function() {
				  $('.dialog-inner').remove();
			    }, 1000);
		    }).trigger('mouseleave');
		    
             return true;
		} else if (status == 0) {

		} else {

		}
	});

	//加载推荐
	if ($('.item-recommend').length) {
		var cateID = $('.item-recommend').attr('data-cateid') || 0;
		$.ajax({
			type: 'GET',
			url: UX.basePath + 'ajax/getTuijianItems.htm',
			data: {
				cityId: UX.city.id,
				catId: cateID
			},
			success: function(json) {
				if (json.code == 0) {
					var data = json.data;
					if (data.length == 0) {
						$('.item-recommend').hide();
					}
					var content = '';
					for (var i = data.length - 1; i >= 0; i--) {
						var item = data[i];
						var id = item.id;
						var link = UX.basePath + 'item.htm?cityId=' + UX.city.id + '&id=' + id;
						var imgs = item.imgs.split(',')[0] + '!310px310px';
						var name = item.name;
						var price = item.price;
						var delPrice = item.marketPrice == 0 ? 0 : item.marketPrice;
						content += '<li><a class="hd" href="' + link + '"><img width="130" src="' + imgs + '"></a><p class="bd"><a href="' + link + '">' + name + '</a></p><p class="price-sugar"><span>¥' + UX.util.priceFormat(price) + '</span>' + (delPrice != 0 ? ('<del>¥' + UX.util.priceFormat(delPrice) + '</del>') : '') + '</p></li>';
					}
					content = '<div class="body slide-sugar"><div class="wrapper"><ul>' + content + '</ul></div><a class="prev" href="javascript:void(0)"></a><a class="next" href="javascript:void(0)"></a></div>';
					$('.item-recommend').html('<div><h3 class="head">根据浏览为我推荐</h3></div>' + content);
					if ($('.item-recommend').width() > 1000) {
						$('.item-recommend').attr('data-view', 6);
						$('.item-recommend .wrapper').css({
							width: '1080px'
						})
					} else {
						$('.item-recommend').attr('data-view', 5);
						$('.item-recommend .wrapper').css({
							width: '900px'
						})
					}
					var slide = new Slide({
						ele: $('.item-recommend')
					})
				}
			}
		});
	}
	//配送范围
	// $('.B_Range').live('click', function(e) {
	// 	var area = $(this).attr('data-postarea');
	// 	var img = $(this).attr('data-img');
	// 	var popup = new UX.popup({
	// 		className: 'C_Pop_Area',
	// 		cover: true,
	// 		fixed: true,
	// 		zIndex: 9999
	// 	})
	// 	popup.setTitle(UX.city.name + '配送范围：');
	// 	if (img == '') {
	// 		popup.setContent('<p>' + area + '</p>');
	// 	} else {
	// 		popup.setContent('<p>' + area + '</p><img src="http://static.uxiang.com/uxiang/images/white_loading.gif"/>');
	// 	}
	// 	popup.show(true);
	// 	if (img != '') {
	// 		var image = new Image();
	// 		image.src = img;
	// 		image.onload = function() {
	// 			popup.setContent('<p>' + area + '</p><img src="' + img + '"/>');
	// 			popup.size.width = image.width;
	// 			popup.resize();
	// 		}
	// 	}
	// 	return false;
	// })
});
// 购物车
UX.cart = {
	data: [],
	onDel: false,
	key: 'ux_cart_' + UX.city.id,

	//购物车商品种类
	number: function() {
		return this.get().length;
	},
	max: 99,

	//返回一个对象，包含购物车商品的id集和数量集
	params: function() {
		var itemString = UX.cookie.get(this.key) || '';
		var arr = itemString.split(',');
		var ids = [],
			nums = [];
		for (var i = 0; i < arr.length; i++) {
			var item = arr[i].split(':');
			ids.push(item[0]);
			nums.push(item[1]);
		}
		return {
			ids: ids.join(','),
			nums: nums.join(',')
		}
	},
	parse: function(items) {
		var list = '';
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var link = UX.basePath + 'item.htm?cityId=' + UX.city.id + '&id=' + item.id;
			var price = item.price;
			list += '<dd><a class="image" href="' + link + '"><img width="49" src="' + item.imgs + '"></a><a class="name">' + item.name + '</a><span class="operate"><span class="red">¥ ' + accDiv(price, 100) + '</span>x' + item.buyNum + '<a>删除</a></span></dd>';
		}
		return '<dl>' + list + '</dl>';
	},
	get: function() {
		var itemString = UX.cookie.get(this.key);
		if (!itemString || itemString == '') {
			return [];
		}
		return this.format(itemString);
	},
	addTo: function(itemID, number, cityId, obj, update) {
		var status = this.add(itemID, number, update, cityId);
		if (status == 1 && obj) {
			var popup = new UX.popup({
				relater: $(obj),
				center: false,
				className: 'C_Pop_Alert',
				size: {
					width: 100,
					height: 20
				},
				offset: {
					x: -25,
					y: -50
				},
				x: false
			});
			popup.setContent('加入购物车成功！');
			popup.show();
			setTimeout(function() {
				popup.hide();
			}, 1000);
		}
	},
	add: function(itemID, number, update, cityId) {
		if (itemID < 0 || number < 1) {
			return -1;
		}
		number = parseInt(number) || 1;
		var key = this.key;
		if (cityId != undefined) {
			key = 'ux_cart_' + cityId;
		}
		var itemString = UX.cookie.get(key);
		var newItem = {
			id: itemID,
			number: number
		}
		if (!itemString || itemString == '') {
			UX.cookie.set(key, this.format(newItem));
			return 1;
		}
		var items = this.format(itemString);
		var hasExist = false;
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			if (itemID == item.id) {
				hasExist = true;
				if (!update) {
					number += item.number;
				}
				item.number = Math.min(this.max, number);
				break;
			}
		}
		if (!hasExist) {
			if (itemString.length > 4000) {
				UX.alert('亲，装载' + UX.city.name + '的购物车装不下这么多东东了，不如先去付款吧～');
				return 0;
			} else {
				items.push(newItem);
			}
		}
		UX.cookie.set(key, this.format(items));
		return 1;
	},
	addItems: function(str) {
		var cartStrings = str.split(';');
		if (cartStrings.length) {
			for (var i = 0; i < cartStrings.length; i++) {
				var cart = cartStrings[i].split(',');
				this.add(cart[0], cart[1]);
			}
		}
	},
	remove: function(itemID, callback) {
		if (itemID < 0) {
			return
		}
		var callback = callback || $.noop;
		var itemString = UX.cookie.get(this.key);
		var items = this.format(itemString);
		var cartItems = this.data;
		if (items.length != cartItems.length) {
			UX.alert('数据异常');
			return
		}
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var cartItem = cartItems[i];
			if (item.id == itemID) {
				items.splice(i, 1);
			}
			if (cartItem.id == itemID) {
				cartItems.splice(i, 1);
			}
		}
		UX.cookie.set(this.key, this.format(items));
		callback();
	},
	clear: function() {
		UX.cookie.del(this.key);
	},
	itemToString: function(item) {
		return item.id + ':' + item.number;
	},
	format: function() {
		var data = arguments[0];
		if (UX.util.isString(data)) {
			var arr = data.split(',');
			var items = [];
			for (var i = 0; i < arr.length; i++) {
				var params = arr[i].split(':');
				if (!/\d+/.test(params[0])) {
					continue;
				}
				items.push({
					id: params[0],
					number: parseInt(params[1])
				});
			}
			return items;
		}
		if (UX.util.isObject(data)) {
			var str = '';
			return this.itemToString(data);
		}
		if (UX.util.isArray(data)) {
			var strArr = [];
			for (var i = 0; i < data.length; i++) {
				var item = data[i];
				strArr.push(this.itemToString(item))
			}
			return strArr.join(',');
		}
	}
};
UX.cookie = {
	config: {
		expires: 30,
		path: '/'
	},
	set: function(key, value, config) {
		var expTime = new Date();
		var config = $.extend(UX.cookie.config, config);
		expTime.setTime(expTime.getTime() + config.expires * 24 * 60 * 60 * 1000);
		// document.cookie = key + '=' + encodeURIComponent(value) + '; expires=' + expTime.toGMTString() + '; path=' + config.path;
		document.cookie = key + '=' + encodeURIComponent(value) + '; expires=' + expTime.toGMTString() + '; path=' + config.path + '; domain=' + UX.domain;
	},
	get: function(key) {
		var value = null;
		if (document.cookie && document.cookie != '') {
			var cookies = document.cookie.split('; ');
			for (var i = 0; i < cookies.length; i++) {
				var cookie = cookies[i];
				if (cookie.substring(0, key.length + 1) == (key + '=')) {
					value = decodeURIComponent(cookie.substring(key.length + 1));
					break;
				}
			}
		}
		return value;
	},
	del: function(key, config) {
		var expTime = new Date();
		var config = $.extend(UX.cookie.config, config);
		expTime.setTime(expTime.getTime() - 1);
		var value = this.get(key);
		if (value != null) {
			document.cookie = key + "=" + value + "; expires=" + expTime.toGMTString() + '; path=' + config.path + '; domain=' + UX.domain;;
		}
	}
}
UX.popup = function(opts) {
	this.id = opts.id || '';
	this.className = opts.className || 'C_Pop';
	this.box = null;
	this.host = opts.host || $('body');
	this.container = null;
	this.title = null;
	this.content = null;
	this.cover = null;
	this.x = null;
	this.relater = opts.relater || null;
	this.offset = opts.offset || {
		x: '50%',
		y: '50%'
	};
	this.size = $.extend({
		width: '400px',
		height: 'auto'
	}, opts.size);
	this.needDestroy = opts.destroy == undefined ? true : opts.destroy;
	this.needCover = opts.cover == undefined ? false : opts.cover;
	this.needFixed = opts.fixed == undefined ? false : opts.fixed;
	this.needCenter = opts.center == undefined ? true : opts.center;
	this.afterClose = opts.afterClose || null;
	this.needX = opts.x == undefined ? true : opts.x;
	this.zIndex = opts.zIndex || 9999;
	this.init();
	return this;
}
UX.popup.prototype = {
	init: function() {
		var _this = this;
		if (this.id != '' && $('#' + _this.id).length) {
			return;
		}
		_this.box = $('<div>');
		_this.box.attr('id', _this.id);
		_this.box.attr('class', _this.className);
		_this.box.append('<div class="bg">');

		_this.container = $('<div>');
		_this.container.attr('class', 'ct');
		_this.fixed(_this.needFixed);
		_this.container.appendTo(_this.box);

		_this.box.css('z-index', _this.zIndex);
		_this.box.appendTo(_this.host);

		if (_this.needCover) {
			_this.cover = $('<div>');
			_this.cover.addClass(_this.className + '_Cover');
			_this.cover.css({
				display: 'none',
				width: _this.host.width(),
				height: _this.host.height(),
				position: "absolute",
				top: 0,
				left: 0,
				zIndex: this.zIndex - 1
			});
			_this.cover.appendTo(_this.host);
			_this.cover.bind('click', function() {
				_this.hide();
			})
		}
		if (_this.needX) {
			_this.x = $('<a href="javascript:void(0)">x</a>');
			_this.x.addClass('x');
			_this.x.css({
				position: "absolute",
				top: '10px',
				right: '10px',
				zIndex: 99
			});
			_this.x.appendTo(_this.container);
			_this.x.bind('click', function() {
				_this.hide();
			})
		}
	},
	setTitle: function(title) {
		var _this = this;
		if (!_this.title) {
			_this.title = $('<div>');
			_this.title.attr('class', 'title');
			_this.container.prepend(_this.title);
		}
		_this.title.html(title);
	},
	setContent: function(content) {
		var _this = this;
		if (!_this.content) {
			_this.content = $('<div>');
			_this.content.attr('class', 'content');
			_this.container.append(_this.content);
		}
		_this.content.html(content);
	},
	show: function(animated) {
		var _this = this;
		if ($('#' + _this.id).length) {
			_this.box.show();
			return;
		}
		_this.resize();
		if (animated) {
			_this.box.fadeIn();
		} else {
			_this.box.show();
		}
		if (_this.cover) {
			_this.cover.fadeIn();
		}
	},
	hide: function(animated) {
		var _this = this;
		if (animated) {
			_this.box.fadeOut();
		} else {
			_this.box.hide();
		}
		if (_this.afterClose) {
			_this.afterClose();
		}
		if (_this.cover) {
			_this.cover.fadeOut();
		}
		if (_this.needDestroy) {
			_this.destroy();
		}
	},
	fixed: function(needFixed) {
		var ie6 = !-[1, ] && !window.XMLHttpRequest;
		var _this = this;
		_this.box.css("position", "absolute");

		if (needFixed) {
			if (ie6) {
				var html = $("html")[0];
				html.style.backgroundImage = 'url(about:blank)';
				html.style.backgroundAttachment = 'fixed';
				_this.box[0].style.setExpression("top", 'eval(document.compatMode && document.compatMode=="CSS1Compat" ? documentElement.scrollTop + ' + _this.top + ' : document.body.scrollTop + ' + _this.top + ')');
				_this.box[0].style.setExpression("left", 'eval(document.compatMode && document.compatMode=="CSS1Compat" ? documentElement.scrollLeft + ' + _this.left + ' : document.body.scrollLeft + ' + _this.left + ')');
			} else {
				_this.box.css("position", "fixed");
			}
		}
	},
	resize: function() {
		var _this = this;
		_this.box.css({
			left: _this.offset.x,
			top: _this.offset.y,
			width: _this.size.width,
			height: _this.size.height
		});
		if (_this.needCenter) {
			_this.box.css({
				marginLeft: -_this.box.width() / 2,
				marginTop: -_this.box.height() / 2
			});
		}
		if (_this.relater && _this.relater != _this.container) {
			var top = _this.relater.offset().top;
			var left = _this.relater.offset().left;
			_this.box.css({
				left: left + _this.offset.x,
				top: top + _this.offset.y
			})
		}
	},
	destroy: function() {
		var _this = this;
		_this.box.remove();
		for (var key in _this)
			_this[key] = null;
	}
}

UX.alert = function(msg) {
	if (!-[1, ] && !window.XMLHttpRequest) {
		alert(msg);
		return
	}
	var uxAlert = new UX.popup({
		fixed: true,
		className: 'C_Pop_Alert',
		size: {
			width: 300
		},
		x: false
	});
	uxAlert.setContent(msg);
	uxAlert.show();
	setTimeout(function() {
		uxAlert.hide();
	}, 2000)
}
UX.util = {
	isString: isType('String'),
	isObject: isType('Object'),
	isFunction: isType('Function'),
	isNumber: isType('Number'),
	isArray: Array.isArray || isType('Array'),
	priceFormat: function(price, number) {
		var newPrice = (accDiv(price, 100));
		var number = number || 2
		return newPrice.toFixed(number);
	},
	imgLazyLoad: function(container) {
		var container = container || $('body');
		var imgs = container.find('img[data-lazy]');
		imgs.each(function() {
			var img = $(this)[0];
			var src = $(this).attr('data-lazy');
			img.src = src;
		});
	},
	stringOfCountDown: function(time) {
		if (time <= 0) {
			return '订单已关闭';
		}
		var hour = Math.floor(time / 3600);
		var minuteSeconds = time % 3600;
		var minute = Math.floor(minuteSeconds / 60);
		var second = Math.floor(minuteSeconds % 60);
		hour = hour >= 10 ? hour : '0' + hour;
		minute = minute >= 10 ? minute : '0' + minute;
		second = second >= 10 ? second : '0' + second;
		return hour + '时' + minute + "分" + second + "秒";
	}
}

function isType(type) {
	return function(obj) {
		return Object.prototype.toString.call(obj) == '[object ' + type + ']';
	}
}

function getURLParamByName(name, url) {
	name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
	url = url || location.search;
	var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
		results = regex.exec(url);
	return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

function changecity(cityId) {
	var url = location.href;

	var curcity = getURLParamByName("cityId");
	var curcity1 = getURLParamByName("city-id");
	//结算页跳转到购物车页面
	if (url.indexOf("settlement.htm") > 0 || url.indexOf("postOrder.htm") > 0) {
		return UX.basePath + "cart.htm?cityId=" + cityId;
	}
	if (curcity1 != '') {
		curcity = curcity1;
	}
	if (curcity == '') {
		if (url.indexOf("?") > 0) {
			return url + "&cityId=" + cityId;
		} else {
			return url + "?cityId=" + cityId;
		}
	} else {
		return url.replace("cityId=" + curcity, "cityId=" + cityId).replace("city-id=" + curcity, "city-id=" + cityId);
	}
}

function replaceQueryString(uri, key, value) {
	var re = new RegExp("([?|&])" + key + "=.*?(&|$)", "i");
	separator = uri.indexOf('?') !== -1 ? "&" : "?";
	if (uri.match(re)) {
		return uri.replace(re, '$1' + key + "=" + value + '$2');
	} else {
		return uri + separator + key + "=" + value;
	}
}

function addToFavorite() {
	var d = "http://www.uxiang.com/";
	//	var c = "U箱超市";
	var c = "U\u7bb1\u8d85\u5e02";
	if (document.all) {
		window.external.AddFavorite(d, c)
	} else {
		if (window.sidebar) {
			window.sidebar.addPanel(c, d, "")
		} else {
			alert("\u5bf9\u4e0d\u8d77\uff0c\u60a8\u7684\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u6b64\u64cd\u4f5c!\n\u8bf7\u60a8\u4f7f\u7528\u83dc\u5355\u680f\u6216Ctrl+D\u6536\u85cf\u672c\u7ad9\u3002");
		}
	}
}
// 乘法函数，用来得到精确的乘法结果 
// 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。 
// 调用：accMul(arg1,arg2) 
// 返回值：arg1乘以arg2的精确结果 

function accMul(arg1, arg2) {
	var m = 0,
		s1 = arg1 + "",
		s2 = arg2 + "";
	try {
		m += s1.split(".")[1].length;
	} catch (e) {}
	try {
		m += s2.split(".")[1].length;
	} catch (e) {}
	return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);
}
// 加法函数，用来得到精确的加法结果 
// 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。 
// 调用：accAdd(arg1,arg2) 
// 返回值：arg1加上arg2的精确结果 
//function accAdd(arg1,arg2){ 
//var r1,r2,m; 
//try{r1=( arg1+"").split(".")[1].length}catch(e){r1=0} 
//try{r2=( arg2+"").split(".")[1].length}catch(e){r2=0} 
//m=Math.pow(10,Math.max(r1,r2)) 
//return (arg1*m+arg2*m)/m 
//}

function accAdd(arg1, arg2) {

	var r1, r2, m, c;

	try {
		r1 = (arg1 + "").split(".")[1].length;
	} catch (e) {
		r1 = 0;
	}

	try {
		r2 = (arg2 + "").split(".")[1].length;
	} catch (e) {
		r2 = 0;
	}

	c = Math.abs(r1 - r2);
	m = Math.pow(10, Math.max(r1, r2));
	if (c > 0) {
		var cm = Math.pow(10, c);
		if (r1 > r2) {
			arg1 = Number((arg1 + "").replace(".", ""));
			arg2 = Number((arg2 + "").replace(".", "")) * cm;
		} else {
			arg1 = Number((arg1 + "").replace(".", "")) * cm;
			arg2 = Number((arg2 + "").replace(".", ""));
		}
	} else {
		arg1 = Number((arg1 + "").replace(".", ""));
		arg2 = Number((arg2 + "").replace(".", ""));
	}
	return (arg1 + arg2) / m;

}

// 除法函数，用来得到精确的除法结果 
// 说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。 
// 调用：accDiv(arg1,arg2) 
// 返回值：arg1除以arg2的精确结果 

function accDiv(arg1, arg2) {
	var t1 = 0,
		t2 = 0,
		r1, r2;
	try {
		t1 = (arg1 + "").split(".")[1].length;
	} catch (e) {}
	try {
		t2 = (arg2 + "").split(".")[1].length;
	} catch (e) {}
	with(Math) {
		r1 = Number((arg1 + "").replace(".", ""));
		r2 = Number((arg2 + "").replace(".", ""));
		return (r1 / r2) * pow(10, t2 - t1);
	}
}

// 减法函数 

function Subtr(arg1, arg2) {
	var r1, r2, m, n;
	try {
		r1 = (arg1 + "").split(".")[1].length;
	} catch (e) {
		r1 = 0;
	}
	try {
		r2 = (arg2 + "").split(".")[1].length;
	} catch (e) {
		r2 = 0;
	}
	m = Math.pow(10, Math.max(r1, r2));
	// last modify by deeka
	// 动态控制精度长度
	n = (r1 >= r2) ? r1 : r2;
	return ((arg1 * m - arg2 * m) / m).toFixed(n);
}

//tab jq切换
(function($, undefined) {
	$.fn.tab = function(evt) {
		this.each(function() {
			var _this = $(this);

			var ts = _this.find(".act-tab-titles");
			var titles = ts.children("li").length ? ts.children("li") : ts.find(".act-tab-title");
			var tLen = titles.length;
			var contents = _this.find(".act-tab-content");
			var cLen = contents.length;
			var current = titles.index($("li.selected")) < 0 ? 0 : titles.index($("li.selected"));
			var ratio = cLen / tLen;
			var ev = evt || 'click';
			titles.each(function(index) {
				$(this).bind(ev, function() {
					// if (index == current) {
					// 	return;
					// }
					//titles.eq(current).removeClass("selected");
					var curr = current;

					current = index;
					$(this).toggleClass("selected");
					contents.eq(index).toggle();
					// for (var i = 0; i < ratio; i++) {
					// 	contents.eq(i * tLen + index).show();
					// 	contents.eq(i * tLen + curr).hide();
					// };
				});
				// $(this).hover(function() {
				// 	$(this).addClass('hover');
				// }, function() {
				// 	$(this).removeClass('hover');
				// })
			});
		});
	}
})(jQuery)
$('#L_CartMenu').tab();


    /*
     *删除弹框
     */
    function DelAlert(opts){
    	var _this=this;

    	this.x=opts.x;
    	this.y=opts.y;
    	this.relater=opts.relater;
    	this.title=opts.title;
    	this.content=opts.content;
    	this.btnFirst=opts.btnFirst ? opts.btnFirst :'确定';
    	this.btnSecond=opts.btnSecond ? opts.btnSecond :'取消';
    	this.init();
    }

    DelAlert.prototype.init=function(){
    	var _this=this;

    	var pop = new UX.popup({
			relater: _this.relater,
			center: false,
			className: 'dialog-inner',
			size: {
				width: 252,
				height: 'auto'
			},
			offset: {
				x: _this.x,
				y: _this.y
			},
			x: false
		});
		pop.setTitle('<div class="dialog-toolbar clearfix"><a class="dialog-close" href="javascript:void(0);" title="关闭">关闭</a><h3 class="dialog-title">'+_this.title+'</h3></div>');
		pop.setContent('<div class="dialog-content"><div class="cart-delete">'+_this.content+'</div><div class="btns clearfix"><a href="javascript:void(0);" class="btn btn-ok"><span class="btn-text">'+_this.btnFirst+'</span></a><a href="javascript:void(0);" class="btn btn-cancel"><span class="btn-text">'+_this.btnSecond+'</span></a></div></div>');
		pop.show();
		$('.btn-cancel,.dialog-close').live('click',function(){
			$(this).parents('.dialog-inner').remove();
		});
    };

